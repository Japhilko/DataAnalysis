install.packages("wikipediatrend")
library(wikipediatrend)
library(wikipediatrend)
page_views <- wp_trend(
page = c( "Millennium_Development_Goals", "Climate_Change") )
library(ggplot2)
ggplot(page_views, aes(x=date, y=count, group=page, color=page)) +
geom_line(size=1.5) + theme_bw()
page_views <-
wp_trend(
page = "Millennium_Development_Goals" ,
from = "2000-01-01",
to   = prev_month_end()
)
page_views1 <-
wp_trend(
page = "Zika-Virus" ,
from = "2000-01-01",
to   = prev_month_end()
)
library(ggplot2)
ggplot(page_views, aes(x=date, y=count, color=wp_year(date))) +
geom_line() +
stat_smooth(method = "lm", formula = y ~ poly(x, 22), color="#CD0000a0", size=1.2) +
theme_bw()
ggplot(page_views1, aes(x=date, y=count, color=wp_year(date))) +
geom_line() +
stat_smooth(method = "lm", formula = y ~ poly(x, 22), color="#CD0000a0", size=1.2) +
theme_bw()
page_views2 <-
wp_trend(
page = c("Zika-Virus", "Zika_virus") ,
lang = c("de", "en"),
from = Sys.Date()-100
)
library(ggplot2)
library(ggplot2)
ggplot(page_views2, aes(x=date, y=count, group=lang, color=lang, fill=lang)) +
geom_smooth(size=1.5) +
geom_point() +
theme_bw()
library(rgdal)
install.packages("rgdal")
library(raster)
install.packages("raster")
install.packages("raster")
library(raster)
date()
DEU4 <- getData('GADM',
country='DEU',
level=4)
DEU4@daat
head(DEU4@data)
Kerpen <- DEU4[DEU4@data$NAME_4=="Kerpen",]
Kerpen
plot(Kerpen)
library(osmar)
install.packages("osmar")
bb_mas <- bbox(xploy)
xploy <- DEU4[DEU4@data$NAME_4=="Kerpen",]
plot(xploy)
bb_mas <- bbox(xploy)
Dist_m_x <- distm(bb_mas[,1],c(bb_mas[1,2],bb_mas[2,1]))
library(maptools)
install.packages("maptools")
library(maptools)
install.packages("rgeos")
library(maptools)
Dist_m_x <- distm(bb_mas[,1],c(bb_mas[1,2],bb_mas[2,1]))
library(geosphere)
Dist_m_x <- distm(bb_mas[,1],c(bb_mas[1,2],bb_mas[2,1]))
Dist_m_y <- distm(bb_mas[,1],c(bb_mas[1,1],bb_mas[2,2]))
Dist <- apply(bb_mas,1,diff)
v_dist <- 10
xstep <- seq(bb_mas[1,1],bb_mas[1,2],
by=Dist[1]/v_dist)
ystep <- seq(bb_mas[2,1],bb_mas[2,2],
by=Dist[2]/v_dist)
poinTs <- expand.grid(xstep,ystep)
Lcoords <- Nk_shape@polygons[[1]]@Polygons[[1]]@coords
Lcoords <- xploy@polygons[[1]]@Polygons[[1]]@coords
info <- vector()
for (i in 1:nrow(poinTs)){
info[i] <- point.in.polygon(poinTs[i,1],poinTs[i,2],Lcoords[,1],Lcoords[,2])
}
poinTs2 <- poinTs[info==1,]
bb22 <- center_bbox(poinTs2[i,1],poinTs2[i,2],Dist_m_x/v_dist, Dist_m_y/v_dist)
library(osmar)
bb22 <- center_bbox(poinTs2[i,1],poinTs2[i,2],Dist_m_x/v_dist, Dist_m_y/v_dist)
Dist_m_x/v_dist
Dist_m_x
Lcoords
bb_mas[1,1]
Dist[1]/v_dist
poinTs <- expand.grid(xstep,ystep)
poinTs
poinTs2
Dist_m_x/v_dist
Dist_m_x <- distm(bb_mas[,1],
c(bb_mas[1,2],
bb_mas[2,1]))
Dist_m_x
bb_mas[,1]
c(bb_mas[1,2],
bb_mas[2,1])
?distm
bb_mas
Dist_m_x/v_dist
Dist_m_y/v_dist
Dist_m_x <- dist(bb_mas[,1],
c(bb_mas[1,2],
bb_mas[2,1]))
Lcoords <- xpoly@polygons[[1]]@Polygons[[1]]@coords
poinTs2[i,1]
i<-1
bb22 <- center_bbox(poinTs2[i,1],poinTs2[i,2],Dist_m_x/v_dist, Dist_m_y/v_dist)
ua <- get_osm(bb22, source = api)
api <- osmsource_api()
ua <- get_osm(bb22, source = api)
nrow(poinTs2)
way_types <- c("pedestrian","motorway","primary","secondary","tertiary","residential")
i<-1
osm_obj <- find(ua, way(tags(k == "highway" & v == way_types[i])))
osm_obj <- find_down(ua, way(osm_obj))
osm_obj <- subset(ua, ids = osm_obj)
eval(parse(text=paste0(way_types[i],"_sp <- as_sp(osm_obj,'lines')")))
i<-2
i<-3
osm_obj <- find(ua, way(tags(k == "highway" & v == way_types[i])))
osm_obj <- find_down(ua, way(osm_obj))
osm_obj <- subset(ua, ids = osm_obj)
eval(parse(text=paste0(way_types[i],"_sp <- as_sp(osm_obj,'lines')")))
primary_sp
getwd()
install_github("Japhilko/geosmdata",subdir="GeoData")
library(devtools)
install.packages("devtools")
install.packages("devtools")
library(devtools)
session_info()
install_github("Japhilko/geosmdata",subdir="GeoData")
install_github("Japhilko/GeoData/geosmdata")
get_osm_nodes
library(geosmdata)
get_osm_nodes
getlines <- function (object, place){
Link1 <- "http://www.overpass-api.de/api/interpreter?data=[maxsize:1073741824][timeout:900];area[name=\""
InfoList <- xmlParse(paste(Link1, place, "\"];way(area)[",
object, "];out;", sep = ""))
return(InfoList)
}
Info <- getlines("highway=pedestrian","Mannheim")
Info
info2 <- extract_osm_nodes("leisure=playground","Mannheim")
info2 <- get_osm_nodes("leisure=playground","Mannheim")
info2
library(XML)
?xmlParse
